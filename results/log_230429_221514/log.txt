load vqvae and show config: {'name': 'MoCoVQVAE_wCD_shareCB', 'pretrain_path': None, 'checkpoint_path': '/export2/xu1201/MOSO/MOSO-VQVAE/experiments/MoCoVQVAEwCDsCB_UCF_im256_16frames_id4_2023-04-11-02-08-29/MoCoVQVAE_wCD_shareCB_iter250000.pth', 'load_strict': False, 'num_hiddens': 256, 'num_residual_layers': 4, 'num_residual_hiddens': 128, 'embedding_dim': 256, 'num_embeddings': 16384, 'ds_content': 3, 'ds_motion': 5, 'ds_identity': 4, 'ds_background': 3, 'suf_method': 'conv', 'decoder_type': 'decoder_woPA', 'encoder_mo_type': 'default', 'num_head': 4, 'num_group': 4, 'ABS_weight': 1.0, 'MSE_weight': 0.0, 'Gen_weight': 0.1, 'decay': 0.99, 'if_augcb': 2, 'commitment_cost': 0.25, 'with_lpips': True, 'lpips_factor': 1.0, 'disc_name': 'patchwise', 'disc_opt': {'input_nc': 48, 'n_layers': 3, 'ndf': 64, 'input_formation': 'concat_c'}}
!!!!!!!!!!! time head: 16 !!!!!!!!!!!!!
!!! ABS_weight: 1.0
!!! MSE_weight: 0
!!! SSIM_weight: 0
contructing model...
ds_background:  3
num_hiddens:  256
num_residual_layers:  4
num_residual_hiddens:  128
suf_method:  conv
n_frames:  16
Loading Motion Encoder: Encoder_Motion...
WARNING: pre_up_bg:  Identity()
WARNING: pre_up_id:  Upsample(scale_factor=2.0, mode=bilinear)
{'image_size': 32, 'in_channels': 256, 'out_channels': 256, 'model_channels': 256, 'attention_resolutions': [4, 2, 1], 'num_res_blocks': 2, 'channel_mult': [1, 2, 4, 4], 'num_heads': 8, 'use_scale_shift_norm': True, 'resblock_updown': True, 'cond_model': True, 'ds_bg': 3, 'ds_id': 4, 'ds_mo': 5, 'vae_hidden': 256}
before loop:
num of input blocks: 1
num of input attns: 1
DDPM: Running in eps-prediction mode
for bg encoder, _ds_m =  3 , xs.shape =  torch.Size([16, 3, 256, 256]) torch.float32
in bg _layer 0, xs.shape =  torch.Size([16, 256, 128, 128]) torch.float32
in bg _layer 1, xs.shape =  torch.Size([16, 256, 64, 64]) torch.float32
in bg _layer 2, xs.shape =  torch.Size([16, 256, 32, 32]) torch.float32
in bg encoder conv, xs.shape =  torch.Size([16, 256, 32, 32]) torch.float32
in bg encoder conv after rearrange, xs.shape =  torch.Size([1, 4096, 32, 32]) torch.float32
for id encoder: _ds_m =  4
for mo encoder: _ds_m =  5
feat_bg.shape:  torch.Size([1, 1, 256, 32, 32])
feat_id.shape:  torch.Size([1, 1, 256, 16, 16])
feat_mo.shape:  torch.Size([1, 16, 256, 8, 8])
show encoding indices: torch.Size([1024])
show encodings: torch.Size([1024, 16384])
show encoding indices: torch.Size([256])
show encodings: torch.Size([256, 16384])
show encoding indices: torch.Size([1024])
show encodings: torch.Size([1024, 16384])
for bg encoder, _ds_m =  3 , xs.shape =  torch.Size([16, 3, 256, 256]) torch.float32
in bg _layer 0, xs.shape =  torch.Size([16, 256, 128, 128]) torch.float32
in bg _layer 1, xs.shape =  torch.Size([16, 256, 64, 64]) torch.float32
in bg _layer 2, xs.shape =  torch.Size([16, 256, 32, 32]) torch.float32
in bg encoder conv, xs.shape =  torch.Size([16, 256, 32, 32]) torch.float32
in bg encoder conv after rearrange, xs.shape =  torch.Size([1, 4096, 32, 32]) torch.float32
for id encoder: _ds_m =  4
for mo encoder: _ds_m =  5
feat_bg.shape:  torch.Size([1, 1, 256, 32, 32])
feat_id.shape:  torch.Size([1, 1, 256, 16, 16])
feat_mo.shape:  torch.Size([1, 16, 256, 8, 8])
xbg_toks shape: torch.Size([1, 1, 32, 32])
xid_toks shape: torch.Size([1, 1, 16, 16])
xmo_toks shape: torch.Size([1, 16, 8, 8])
show encoding indices: torch.Size([1024])
show encodings: torch.Size([1024, 16384])
show encoding indices: torch.Size([256])
show encodings: torch.Size([256, 16384])
show encoding indices: torch.Size([1024])
show encodings: torch.Size([1024, 16384])
show t in p_losses: tensor([3], device='cuda:0') torch.Size([1])
show timesteps:  tensor([3], device='cuda:0') torch.Size([1])
here concat z and h together in time dimension
h shape:  torch.Size([1, 512, 2304])
h_bg shape:  torch.Size([1, 512, 32, 32])
h_id shape:  torch.Size([1, 512, 16, 16])
h_mo shape:  torch.Size([1, 512, 32, 32])
	h_bg shape after module:  torch.Size([1, 256, 32, 32])
	h_id shape after module:  torch.Size([1, 256, 16, 16])
	h_mo shape after module:  torch.Size([1, 256, 32, 32])
	res, t:  32 16
	h_bg shape after view:  torch.Size([1, 256, 1024])
	h_id shape after view:  torch.Size([1, 256, 256])
	h_mo shape after view:  torch.Size([1, 256, 1024])
	h shape after input_attn:  torch.Size([1, 256, 2304])
	h_bg shape after res*res:  torch.Size([1, 256, 32, 32])
	h_id shape after res*res:  torch.Size([1, 256, 16, 16])
	h_mo shape after res*res:  torch.Size([1, 256, 32, 32])
	in loop: 0
	append h_bg shape:  torch.Size([1, 256, 32, 32])
	append h_id shape:  torch.Size([1, 256, 16, 16])
	append h_mo shape:  torch.Size([1, 256, 32, 32])

	h_bg shape after module:  torch.Size([1, 256, 32, 32])
	h_id shape after module:  torch.Size([1, 256, 16, 16])
	h_mo shape after module:  torch.Size([1, 256, 32, 32])
	res, t:  32 16
	h_bg shape after view:  torch.Size([1, 256, 1024])
	h_id shape after view:  torch.Size([1, 256, 256])
	h_mo shape after view:  torch.Size([1, 256, 1024])
	h shape after input_attn:  torch.Size([1, 256, 2304])
	h_bg shape after res*res:  torch.Size([1, 256, 32, 32])
	h_id shape after res*res:  torch.Size([1, 256, 16, 16])
	h_mo shape after res*res:  torch.Size([1, 256, 32, 32])
	in loop: 1
	append h_bg shape:  torch.Size([1, 256, 32, 32])
	append h_id shape:  torch.Size([1, 256, 16, 16])
	append h_mo shape:  torch.Size([1, 256, 32, 32])

	h_bg shape after module:  torch.Size([1, 256, 32, 32])
	h_id shape after module:  torch.Size([1, 256, 16, 16])
	h_mo shape after module:  torch.Size([1, 256, 32, 32])
	res, t:  32 16
	h_bg shape after view:  torch.Size([1, 256, 1024])
	h_id shape after view:  torch.Size([1, 256, 256])
	h_mo shape after view:  torch.Size([1, 256, 1024])
	h shape after input_attn:  torch.Size([1, 256, 2304])
	h_bg shape after res*res:  torch.Size([1, 256, 32, 32])
	h_id shape after res*res:  torch.Size([1, 256, 16, 16])
	h_mo shape after res*res:  torch.Size([1, 256, 32, 32])
	in loop: 2
	append h_bg shape:  torch.Size([1, 256, 32, 32])
	append h_id shape:  torch.Size([1, 256, 16, 16])
	append h_mo shape:  torch.Size([1, 256, 32, 32])

	h_bg shape after module:  torch.Size([1, 256, 16, 16])
	h_id shape after module:  torch.Size([1, 256, 8, 8])
	h_mo shape after module:  torch.Size([1, 256, 16, 16])
	res, t:  16 8
	h_bg shape after view:  torch.Size([1, 256, 256])
	h_id shape after view:  torch.Size([1, 256, 64])
	h_mo shape after view:  torch.Size([1, 256, 256])
	h shape after input_attn:  torch.Size([1, 256, 576])
	h_bg shape after res*res:  torch.Size([1, 256, 16, 16])
	h_id shape after res*res:  torch.Size([1, 256, 8, 8])
	h_mo shape after res*res:  torch.Size([1, 256, 16, 16])
	in loop: 3
	append h_bg shape:  torch.Size([1, 256, 16, 16])
	append h_id shape:  torch.Size([1, 256, 8, 8])
	append h_mo shape:  torch.Size([1, 256, 16, 16])

	h_bg shape after module:  torch.Size([1, 512, 16, 16])
	h_id shape after module:  torch.Size([1, 512, 8, 8])
	h_mo shape after module:  torch.Size([1, 512, 16, 16])
	res, t:  16 8
	h_bg shape after view:  torch.Size([1, 512, 256])
	h_id shape after view:  torch.Size([1, 512, 64])
	h_mo shape after view:  torch.Size([1, 512, 256])
	h shape after input_attn:  torch.Size([1, 512, 576])
	h_bg shape after res*res:  torch.Size([1, 512, 16, 16])
	h_id shape after res*res:  torch.Size([1, 512, 8, 8])
	h_mo shape after res*res:  torch.Size([1, 512, 16, 16])
	in loop: 4
	append h_bg shape:  torch.Size([1, 512, 16, 16])
	append h_id shape:  torch.Size([1, 512, 8, 8])
	append h_mo shape:  torch.Size([1, 512, 16, 16])

	h_bg shape after module:  torch.Size([1, 512, 16, 16])
	h_id shape after module:  torch.Size([1, 512, 8, 8])
	h_mo shape after module:  torch.Size([1, 512, 16, 16])
	res, t:  16 8
	h_bg shape after view:  torch.Size([1, 512, 256])
	h_id shape after view:  torch.Size([1, 512, 64])
	h_mo shape after view:  torch.Size([1, 512, 256])
	h shape after input_attn:  torch.Size([1, 512, 576])
	h_bg shape after res*res:  torch.Size([1, 512, 16, 16])
	h_id shape after res*res:  torch.Size([1, 512, 8, 8])
	h_mo shape after res*res:  torch.Size([1, 512, 16, 16])
	in loop: 5
	append h_bg shape:  torch.Size([1, 512, 16, 16])
	append h_id shape:  torch.Size([1, 512, 8, 8])
	append h_mo shape:  torch.Size([1, 512, 16, 16])

	h_bg shape after module:  torch.Size([1, 512, 8, 8])
	h_id shape after module:  torch.Size([1, 512, 4, 4])
	h_mo shape after module:  torch.Size([1, 512, 8, 8])
	res, t:  8 4
	h_bg shape after view:  torch.Size([1, 512, 64])
	h_id shape after view:  torch.Size([1, 512, 16])
	h_mo shape after view:  torch.Size([1, 512, 64])
	h shape after input_attn:  torch.Size([1, 512, 144])
	h_bg shape after res*res:  torch.Size([1, 512, 8, 8])
	h_id shape after res*res:  torch.Size([1, 512, 4, 4])
	h_mo shape after res*res:  torch.Size([1, 512, 8, 8])
	in loop: 6
	append h_bg shape:  torch.Size([1, 512, 8, 8])
	append h_id shape:  torch.Size([1, 512, 4, 4])
	append h_mo shape:  torch.Size([1, 512, 8, 8])

	h_bg shape after module:  torch.Size([1, 1024, 8, 8])
	h_id shape after module:  torch.Size([1, 1024, 4, 4])
	h_mo shape after module:  torch.Size([1, 1024, 8, 8])
	res, t:  8 4
	h_bg shape after view:  torch.Size([1, 1024, 64])
	h_id shape after view:  torch.Size([1, 1024, 16])
	h_mo shape after view:  torch.Size([1, 1024, 64])
	h shape after input_attn:  torch.Size([1, 1024, 144])
	h_bg shape after res*res:  torch.Size([1, 1024, 8, 8])
	h_id shape after res*res:  torch.Size([1, 1024, 4, 4])
	h_mo shape after res*res:  torch.Size([1, 1024, 8, 8])
	in loop: 7
	append h_bg shape:  torch.Size([1, 1024, 8, 8])
	append h_id shape:  torch.Size([1, 1024, 4, 4])
	append h_mo shape:  torch.Size([1, 1024, 8, 8])

	h_bg shape after module:  torch.Size([1, 1024, 8, 8])
	h_id shape after module:  torch.Size([1, 1024, 4, 4])
	h_mo shape after module:  torch.Size([1, 1024, 8, 8])
	res, t:  8 4
	h_bg shape after view:  torch.Size([1, 1024, 64])
	h_id shape after view:  torch.Size([1, 1024, 16])
	h_mo shape after view:  torch.Size([1, 1024, 64])
	h shape after input_attn:  torch.Size([1, 1024, 144])
	h_bg shape after res*res:  torch.Size([1, 1024, 8, 8])
	h_id shape after res*res:  torch.Size([1, 1024, 4, 4])
	h_mo shape after res*res:  torch.Size([1, 1024, 8, 8])
	in loop: 8
	append h_bg shape:  torch.Size([1, 1024, 8, 8])
	append h_id shape:  torch.Size([1, 1024, 4, 4])
	append h_mo shape:  torch.Size([1, 1024, 8, 8])

	h_bg shape after module:  torch.Size([1, 1024, 4, 4])
	h_id shape after module:  torch.Size([1, 1024, 2, 2])
	h_mo shape after module:  torch.Size([1, 1024, 4, 4])
	res, t:  4 2
	h_bg shape after view:  torch.Size([1, 1024, 16])
	h_id shape after view:  torch.Size([1, 1024, 4])
	h_mo shape after view:  torch.Size([1, 1024, 16])
	h shape after input_attn:  torch.Size([1, 1024, 36])
	h_bg shape after res*res:  torch.Size([1, 1024, 4, 4])
	h_id shape after res*res:  torch.Size([1, 1024, 2, 2])
	h_mo shape after res*res:  torch.Size([1, 1024, 4, 4])
	in loop: 9
	append h_bg shape:  torch.Size([1, 1024, 4, 4])
	append h_id shape:  torch.Size([1, 1024, 2, 2])
	append h_mo shape:  torch.Size([1, 1024, 4, 4])

	h_bg shape after module:  torch.Size([1, 1024, 4, 4])
	h_id shape after module:  torch.Size([1, 1024, 2, 2])
	h_mo shape after module:  torch.Size([1, 1024, 4, 4])
	res, t:  4 2
	h_bg shape after view:  torch.Size([1, 1024, 16])
	h_id shape after view:  torch.Size([1, 1024, 4])
	h_mo shape after view:  torch.Size([1, 1024, 16])
	h shape after input_attn:  torch.Size([1, 1024, 36])
	h_bg shape after res*res:  torch.Size([1, 1024, 4, 4])
	h_id shape after res*res:  torch.Size([1, 1024, 2, 2])
	h_mo shape after res*res:  torch.Size([1, 1024, 4, 4])
	in loop: 10
	append h_bg shape:  torch.Size([1, 1024, 4, 4])
	append h_id shape:  torch.Size([1, 1024, 2, 2])
	append h_mo shape:  torch.Size([1, 1024, 4, 4])

	h_bg shape after module:  torch.Size([1, 1024, 4, 4])
	h_id shape after module:  torch.Size([1, 1024, 2, 2])
	h_mo shape after module:  torch.Size([1, 1024, 4, 4])
	res, t:  4 2
	h_bg shape after view:  torch.Size([1, 1024, 16])
	h_id shape after view:  torch.Size([1, 1024, 4])
	h_mo shape after view:  torch.Size([1, 1024, 16])
	h shape after input_attn:  torch.Size([1, 1024, 36])
	h_bg shape after res*res:  torch.Size([1, 1024, 4, 4])
	h_id shape after res*res:  torch.Size([1, 1024, 2, 2])
	h_mo shape after res*res:  torch.Size([1, 1024, 4, 4])
	in loop: 11
	append h_bg shape:  torch.Size([1, 1024, 4, 4])
	append h_id shape:  torch.Size([1, 1024, 2, 2])
	append h_mo shape:  torch.Size([1, 1024, 4, 4])

start up sampling
cat out h shape:  torch.Size([1, 256, 2304])
show model_out in p_losses torch.Size([1, 256, 2304])
z_output.shape: torch.Size([1, 256, 2304])
out_bg.shape: torch.Size([1, 1, 256, 32, 32])
out_id.shape: torch.Size([1, 1, 256, 16, 16])
out_mo.shape: torch.Size([1, 16, 256, 8, 8])
show final output.shape: torch.Size([1, 16, 3, 256, 256])
